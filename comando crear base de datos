-- Database: "proyectoFinal"

-- DROP DATABASE "proyectoFinal";

CREATE DATABASE "proyectoFinal"
  WITH OWNER = postgres
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'es_AR.UTF-8'
       LC_CTYPE = 'es_AR.UTF-8'
       CONNECTION LIMIT = -1;


-- Table: usuario

-- DROP TABLE usuario;

CREATE TABLE usuario
(
  email character varying(100) NOT NULL,
  contrasena character varying(100),
  nombre character varying(50),
  apellido character varying(50),
  CONSTRAINT pkuser PRIMARY KEY (email )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE usuario
  OWNER TO postgres;


-- Table: administradores

-- DROP TABLE administradores;

CREATE TABLE administradores
(
-- Inherited from table usuario:  email character varying(100) NOT NULL,
-- Inherited from table usuario:  contrasena character varying(100),
-- Inherited from table usuario:  nombre character varying(50),
-- Inherited from table usuario:  apellido character varying(50),
  idadmin serial NOT NULL,
  CONSTRAINT pkadmin PRIMARY KEY (idadmin )
)
INHERITS (usuario)
WITH (
  OIDS=FALSE
);
ALTER TABLE administradores
  OWNER TO postgres;


-- Table: imagenes

-- DROP TABLE imagenes;

CREATE TABLE imagenes
(
  idimg integer NOT NULL DEFAULT nextval('imgenes_idimg_seq'::regclass),
  imagen character varying(800),
  CONSTRAINT pkimg PRIMARY KEY (idimg )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE imagenes
  OWNER TO postgres;


-- Table: usuariocomun

-- DROP TABLE usuariocomun;

CREATE TABLE usuariocomun
(
-- Inherited from table usuario:  email character varying(100) NOT NULL,
-- Inherited from table usuario:  contrasena character varying(100),
-- Inherited from table usuario:  nombre character varying(50),
-- Inherited from table usuario:  apellido character varying(50),
  iduc serial NOT NULL,
  direccion character varying(100),
  fotoperfil integer,
  aprobacion boolean,
  codigoaprobacion character varying(400),
  telefono bigint,
  CONSTRAINT pkuc PRIMARY KEY (iduc ),
  CONSTRAINT fkimg FOREIGN KEY (fotoperfil)
      REFERENCES imagenes (idimg) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
INHERITS (usuario)
WITH (
  OIDS=FALSE
);
ALTER TABLE usuariocomun
  OWNER TO postgres;

-- Index: fki_fkimg1

-- DROP INDEX fki_fkimg1;

CREATE INDEX fki_fkimg1
  ON usuariocomun
  USING btree
  (fotoperfil );


-- Table: comercios

-- DROP TABLE comercios;

CREATE TABLE comercios
(
-- Inherited from table usuario:  email character varying(100) NOT NULL,
-- Inherited from table usuario:  contrasena character varying(100),
-- Inherited from table usuario:  nombre character varying(50),
-- Inherited from table usuario:  apellido character varying(50),
  cuit bigint NOT NULL,
  nombrenegocio character varying(100),
  direccion character varying(100),
  telefono bigint,
  fotoperfil integer,
  puntuacion integer,
  aprobacion boolean,
  codigoaprobacion character varying(400),
  CONSTRAINT pkcomercio PRIMARY KEY (cuit ),
  CONSTRAINT fkimg FOREIGN KEY (fotoperfil)
      REFERENCES imagenes (idimg) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
INHERITS (usuario)
WITH (
  OIDS=FALSE
);
ALTER TABLE comercios
  OWNER TO postgres;


-- Table: pedidos

-- DROP TABLE pedidos;

CREATE TABLE pedidos
(
  idped serial NOT NULL,
  comercio integer,
  fecha date,
  hora time without time zone,
  aprobacion boolean,
  usuariocomun integer,
  CONSTRAINT pkped PRIMARY KEY (idped ),
  CONSTRAINT fkcom FOREIGN KEY (comercio)
      REFERENCES comercios (cuit) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkusucom FOREIGN KEY (usuariocomun)
      REFERENCES usuariocomun (iduc) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY IMMEDIATE
)
WITH (
  OIDS=FALSE
);
ALTER TABLE pedidos
  OWNER TO postgres;


-- Table: productos

-- DROP TABLE productos;

CREATE TABLE productos
(
  codigo integer NOT NULL,
  nombre character varying(50),
  descripcion character varying(100),
  imgproducto integer,
  CONSTRAINT pkprod PRIMARY KEY (codigo ),
  CONSTRAINT fkimg FOREIGN KEY (imgproducto)
      REFERENCES imagenes (idimg) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE productos
  OWNER TO postgres;


-- Table: prodxped

-- DROP TABLE prodxped;

CREATE TABLE prodxped
(
  idproxped serial NOT NULL,
  pedido integer,
  producto integer,
  CONSTRAINT pkprodxped PRIMARY KEY (idproxped ),
  CONSTRAINT fkped FOREIGN KEY (pedido)
      REFERENCES pedidos (idped) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkprod FOREIGN KEY (producto)
      REFERENCES productos (codigo) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE prodxped
  OWNER TO postgres;


-- Table: comentarios

-- DROP TABLE comentarios;

CREATE TABLE comentarios
(
  texto character varying(200),
  fecha date,
  hora time without time zone,
  aprobacion boolean,
  idcomen serial NOT NULL,
  CONSTRAINT pkcomen PRIMARY KEY (idcomen )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE comentarios
  OWNER TO postgres;

